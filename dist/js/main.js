!function(l){"use strict";var s=l.jCarousel={};s.version="0.3.8";var e=/^([+\-]=)?(.+)$/;s.parseTarget=function(t){var i=!1,s="object"!=typeof t?e.exec(t):null;return s?(t=parseInt(s[2],10)||0,s[1]&&(i=!0,"-="===s[1]&&(t*=-1))):"object"!=typeof t&&(t=parseInt(t,10)||0),{target:t,relative:i}},s.detectCarousel=function(t){for(var i;0<t.length;){if(0<(i=t.filter("[data-jcarousel]")).length)return i;if(0<(i=t.find("[data-jcarousel]")).length)return i;t=t.parent()}return null},s.base=function(r){return{version:s.version,_options:{},_element:null,_carousel:null,_init:l.noop,_create:l.noop,_destroy:l.noop,_reload:l.noop,create:function(){return this._element.attr("data-"+r.toLowerCase(),!0).data(r,this),!1===this._trigger("create")||(this._create(),this._trigger("createend")),this},destroy:function(){return!1===this._trigger("destroy")||(this._destroy(),this._trigger("destroyend"),this._element.removeData(r).removeAttr("data-"+r.toLowerCase())),this},reload:function(t){return!1===this._trigger("reload")||(t&&this.options(t),this._reload(),this._trigger("reloadend")),this},element:function(){return this._element},options:function(t,i){if(0===arguments.length)return l.extend({},this._options);if("string"==typeof t){if(void 0===i)return void 0===this._options[t]?null:this._options[t];this._options[t]=i}else this._options=l.extend({},this._options,t);return this},carousel:function(){return this._carousel||(this._carousel=s.detectCarousel(this.options("carousel")||this._element),this._carousel||l.error('Could not detect carousel for plugin "'+r+'"')),this._carousel},_trigger:function(t,i,s){var e,n=!1;return s=[this].concat(s||[]),(i||this._element).each(function(){e=l.Event((r+":"+t).toLowerCase()),l(this).trigger(e,s),e.isDefaultPrevented()&&(n=!0)}),!n}}},s.plugin=function(r,t){var i=l[r]=function(t,i){this._element=l(t),this.options(i),this._init(),this.create()};return i.fn=i.prototype=l.extend({},s.base(r),t),l.fn[r]=function(s){var e=Array.prototype.slice.call(arguments,1),n=this;return"string"==typeof s?this.each(function(){var t=l(this).data(r);if(!t)return l.error("Cannot call methods on "+r+' prior to initialization; attempted to call method "'+s+'"');if(!l.isFunction(t[s])||"_"===s.charAt(0))return l.error('No such method "'+s+'" for '+r+" instance");var i=t[s].apply(t,e);return i!==t&&void 0!==i?(n=i,!1):void 0}):this.each(function(){var t=l(this).data(r);t instanceof i?t.reload(s):new i(this,s)}),n},i}}(jQuery),function(m,t){"use strict";var s=m(t),f=function(t){return parseFloat(t)||0};m.jCarousel.plugin("jcarousel",{animating:!1,tail:0,inTail:!1,resizeState:null,resizeTimer:null,lt:null,vertical:!1,rtl:!1,circular:!1,underflow:!1,relative:!1,_options:{list:function(){return this.element().children().eq(0)},items:function(){return this.list().children()},animation:400,transitions:!1,wrap:null,vertical:null,rtl:null,center:!1},_list:null,_items:null,_target:m(),_first:m(),_last:m(),_visible:m(),_fullyvisible:m(),_init:function(){var i=this;return i.resizeState=s.width()+"x"+s.height(),this.onWindowResize=function(){i.resizeTimer&&clearTimeout(i.resizeTimer),i.resizeTimer=setTimeout(function(){var t=s.width()+"x"+s.height();t!==i.resizeState&&(i.resizeState=t,i.reload())},100)},this},_create:function(){this._reload(),s.on("resize.jcarousel",this.onWindowResize)},_destroy:function(){s.off("resize.jcarousel",this.onWindowResize)},_reload:function(){this.vertical=this.options("vertical"),null==this.vertical&&(this.vertical=f(this.list().height())>f(this.list().width())),this.rtl=this.options("rtl"),null==this.rtl&&(this.rtl=function(t){if("rtl"===(""+t.attr("dir")).toLowerCase())return!0;var i=!1;return t.parents("[dir]").each(function(){if(/rtl/i.test(m(this).attr("dir")))return!(i=!0)}),i}(this._element)),this.lt=this.vertical?"top":"left",this.relative="relative"===this.list().css("position"),this._list=null,this._items=null;var t=0<=this.index(this._target)?this._target:this.closest();this.circular="circular"===this.options("wrap"),this.underflow=!1;var i={left:0,top:0};return 0<t.length&&(this._prepare(t),this.list().find("[data-jcarousel-clone]").remove(),this._items=null,this.underflow=this._fullyvisible.length>=this.items().length,this.circular=this.circular&&!this.underflow,i[this.lt]=this._position(t)+"px"),this.move(i),this},list:function(){if(null===this._list){var t=this.options("list");this._list=m.isFunction(t)?t.call(this):this._element.find(t)}return this._list},items:function(){if(null===this._items){var t=this.options("items");this._items=(m.isFunction(t)?t.call(this):this.list().find(t)).not("[data-jcarousel-clone]")}return this._items},index:function(t){return this.items().index(t)},closest:function(){var i,s=this,e=this.list().position()[this.lt],n=m(),r=!1,l=this.vertical?"bottom":this.rtl&&!this.relative?"left":"right";return this.rtl&&this.relative&&!this.vertical&&(e+=f(this.list().width())-this.clipping()),this.items().each(function(){if(n=m(this),r)return!1;var t=s.dimension(n);if(0<=(e+=t)){if(i=t-f(n.css("margin-"+l)),!(Math.abs(e)-t+i/2<=0))return!1;r=!0}}),n},target:function(){return this._target},first:function(){return this._first},last:function(){return this._last},visible:function(){return this._visible},fullyvisible:function(){return this._fullyvisible},hasNext:function(){if(!1===this._trigger("hasnext"))return!0;var t=this.options("wrap"),i=this.items().length-1,s=this.options("center")?this._target:this._last;return!!(0<=i&&!this.underflow&&(t&&"first"!==t||this.index(s)<i||this.tail&&!this.inTail))},hasPrev:function(){if(!1===this._trigger("hasprev"))return!0;var t=this.options("wrap");return!!(0<this.items().length&&!this.underflow&&(t&&"last"!==t||0<this.index(this._first)||this.tail&&this.inTail))},clipping:function(){return f(this._element["inner"+(this.vertical?"Height":"Width")]())},dimension:function(t){return f(t["outer"+(this.vertical?"Height":"Width")](!0))},scroll:function(t,i,s){if(this.animating)return this;if(!1===this._trigger("scroll",null,[t,i]))return this;m.isFunction(i)&&(s=i,i=!0);var e=m.jCarousel.parseTarget(t);if(e.relative){var n,r,l,o,a,h,u,c,f=this.items().length-1,d=Math.abs(e.target),p=this.options("wrap");if(0<e.target){var _=this.index(this._last);if(f<=_&&this.tail)this.inTail?"both"===p||"last"===p?this._scroll(0,i,s):m.isFunction(s)&&s.call(this,!1):this._scrollTail(i,s);else if(n=this.index(this._target),this.underflow&&n===f&&("circular"===p||"both"===p||"last"===p)||!this.underflow&&_===f&&("both"===p||"last"===p))this._scroll(0,i,s);else if(l=n+d,this.circular&&f<l){for(c=f,a=this.items().get(-1);c++<l;)a=this.items().eq(0),(h=0<=this._visible.index(a))&&a.after(a.clone(!0).attr("data-jcarousel-clone",!0)),this.list().append(a),h||((u={})[this.lt]=this.dimension(a),this.moveBy(u)),this._items=null;this._scroll(a,i,s)}else this._scroll(Math.min(l,f),i,s)}else if(this.inTail)this._scroll(Math.max(this.index(this._first)-d+1,0),i,s);else if(r=this.index(this._first),n=this.index(this._target),l=(o=this.underflow?n:r)-d,o<=0&&(this.underflow&&"circular"===p||"both"===p||"first"===p))this._scroll(f,i,s);else if(this.circular&&l<0){for(c=l,a=this.items().get(0);c++<0;){a=this.items().eq(-1),(h=0<=this._visible.index(a))&&a.after(a.clone(!0).attr("data-jcarousel-clone",!0)),this.list().prepend(a),this._items=null;var v=this.dimension(a);(u={})[this.lt]=-v,this.moveBy(u)}this._scroll(a,i,s)}else this._scroll(Math.max(l,0),i,s)}else this._scroll(e.target,i,s);return this._trigger("scrollend"),this},moveBy:function(t,i){var s=this.list().position(),e=1,n=0;return this.rtl&&!this.vertical&&(e=-1,this.relative&&(n=f(this.list().width())-this.clipping())),t.left&&(t.left=f(s.left)+n+f(t.left)*e+"px"),t.top&&(t.top=f(s.top)+n+f(t.top)*e+"px"),this.move(t,i)},move:function(t,i){i=i||{};var s=this.options("transitions"),e=!!s,n=!!s.transforms,r=!!s.transforms3d,l=i.duration||0,o=this.list();if(!e&&0<l)o.animate(t,i);else{var a=i.complete||m.noop,h={};if(e){var u={transitionDuration:o.css("transitionDuration"),transitionTimingFunction:o.css("transitionTimingFunction"),transitionProperty:o.css("transitionProperty")},c=a;a=function(){m(this).css(u),c.call(this)},h={transitionDuration:(0<l?l/1e3:0)+"s",transitionTimingFunction:s.easing||i.easing,transitionProperty:0<l?n||r?"all":t.left?"left":"top":"none",transform:"none"}}r?h.transform="translate3d("+(t.left||0)+","+(t.top||0)+",0)":n?h.transform="translate("+(t.left||0)+","+(t.top||0)+")":m.extend(h,t),e&&0<l&&o.one("transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd",a),o.css(h),l<=0&&o.each(function(){a.call(this)})}},_scroll:function(t,i,s){if(this.animating)return m.isFunction(s)&&s.call(this,!1),this;if("object"!=typeof t?t=this.items().eq(t):void 0===t.jquery&&(t=m(t)),0===t.length)return m.isFunction(s)&&s.call(this,!1),this;this.inTail=!1,this._prepare(t);var e=this._position(t);if(e===f(this.list().position()[this.lt]))return m.isFunction(s)&&s.call(this,!1),this;var n={};return n[this.lt]=e+"px",this._animate(n,i,s),this},_scrollTail:function(t,i){if(this.animating||!this.tail)return m.isFunction(i)&&i.call(this,!1),this;var s=this.list().position()[this.lt];this.rtl&&this.relative&&!this.vertical&&(s+=f(this.list().width())-this.clipping()),this.rtl&&!this.vertical?s+=this.tail:s-=this.tail,this.inTail=!0;var e={};return e[this.lt]=s+"px",this._update({target:this._target.next(),fullyvisible:this._fullyvisible.slice(1).add(this._visible.last())}),this._animate(e,t,i),this},_animate:function(t,i,s){if(s=s||m.noop,!1===this._trigger("animate"))return s.call(this,!1),this;this.animating=!0;var e=this.options("animation"),n=m.proxy(function(){this.animating=!1;var t=this.list().find("[data-jcarousel-clone]");0<t.length&&(t.remove(),this._reload()),this._trigger("animateend"),s.call(this,!0)},this),r="object"==typeof e?m.extend({},e):{duration:e},l=r.complete||m.noop;return!1===i?r.duration=0:void 0!==m.fx.speeds[r.duration]&&(r.duration=m.fx.speeds[r.duration]),r.complete=function(){n(),l.call(this)},this.move(t,r),this},_prepare:function(t){var i,s,e,n=this.index(t),r=n,l=this.dimension(t),o=this.clipping(),a=this.vertical?"bottom":this.rtl?"left":"right",h=this.options("center"),u={target:t,first:t,last:t,visible:t,fullyvisible:l<=o?t:m()};if(h&&(l/=2,o/=2),l<o)for(;;){if(0===(i=this.items().eq(++r)).length){if(!this.circular)break;if(i=this.items().eq(0),t.get(0)===i.get(0))break;if((s=0<=this._visible.index(i))&&i.after(i.clone(!0).attr("data-jcarousel-clone",!0)),this.list().append(i),!s){var c={};c[this.lt]=this.dimension(i),this.moveBy(c)}this._items=null}if(0===(e=this.dimension(i)))break;if(l+=e,u.last=i,u.visible=u.visible.add(i),l-f(i.css("margin-"+a))<=o&&(u.fullyvisible=u.fullyvisible.add(i)),o<=l)break}if(!this.circular&&!h&&l<o)for(r=n;!(--r<0||0===(i=this.items().eq(r)).length||0===(e=this.dimension(i))||(l+=e,u.first=i,u.visible=u.visible.add(i),l-f(i.css("margin-"+a))<=o&&(u.fullyvisible=u.fullyvisible.add(i)),o<=l)););return this._update(u),this.tail=0,h||"circular"===this.options("wrap")||"custom"===this.options("wrap")||this.index(u.last)!==this.items().length-1||o<(l-=f(u.last.css("margin-"+a)))&&(this.tail=l-o),this},_position:function(t){var i=this._first,s=f(i.position()[this.lt]),e=this.options("center"),n=e?this.clipping()/2-this.dimension(i)/2:0;return this.rtl&&!this.vertical?(this.relative?s-=f(this.list().width())-this.dimension(i):s-=this.clipping()-this.dimension(i),s+=n):s-=n,!e&&(this.index(t)>this.index(i)||this.inTail)&&this.tail?(s=this.rtl&&!this.vertical?s-this.tail:s+this.tail,this.inTail=!0):this.inTail=!1,-s},_update:function(e){var t,n=this,r={target:this._target,first:this._first,last:this._last,visible:this._visible,fullyvisible:this._fullyvisible},l=this.index(e.first||r.first)<this.index(r.first),i=function(t){var i=[],s=[];e[t].each(function(){r[t].index(this)<0&&i.push(this)}),r[t].each(function(){e[t].index(this)<0&&s.push(this)}),l?i=i.reverse():s=s.reverse(),n._trigger(t+"in",m(i)),n._trigger(t+"out",m(s)),n["_"+t]=e[t]};for(t in e)i(t);return this}})}(jQuery,window),function(t){t(function(){t(".jcarousel").jcarousel({wrap:"circular"}),t(".jcarousel-prev").click(function(){t(".jcarousel").jcarousel("scroll","-=1")}),t(".jcarousel-next").click(function(){t(".jcarousel").jcarousel("scroll","+=1")})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsImpDYXJvdXNlbCIsInZlcnNpb24iLCJyUmVsYXRpdmVUYXJnZXQiLCJwYXJzZVRhcmdldCIsInRhcmdldCIsInJlbGF0aXZlIiwicGFydHMiLCJleGVjIiwicGFyc2VJbnQiLCJkZXRlY3RDYXJvdXNlbCIsImVsZW1lbnQiLCJjYXJvdXNlbCIsImxlbmd0aCIsImZpbHRlciIsImZpbmQiLCJwYXJlbnQiLCJiYXNlIiwicGx1Z2luTmFtZSIsIl9vcHRpb25zIiwiX2VsZW1lbnQiLCJfY2Fyb3VzZWwiLCJfaW5pdCIsIm5vb3AiLCJfY3JlYXRlIiwiX2Rlc3Ryb3kiLCJfcmVsb2FkIiwiY3JlYXRlIiwidGhpcyIsImF0dHIiLCJ0b0xvd2VyQ2FzZSIsImRhdGEiLCJfdHJpZ2dlciIsImRlc3Ryb3kiLCJyZW1vdmVEYXRhIiwicmVtb3ZlQXR0ciIsInJlbG9hZCIsIm9wdGlvbnMiLCJrZXkiLCJ2YWx1ZSIsImFyZ3VtZW50cyIsImV4dGVuZCIsImVycm9yIiwidHlwZSIsImV2ZW50IiwiZGVmYXVsdFByZXZlbnRlZCIsImNvbmNhdCIsImVhY2giLCJFdmVudCIsInRyaWdnZXIiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJwbHVnaW4iLCJwbHVnaW5Qcm90b3R5cGUiLCJQbHVnaW4iLCJmbiIsInByb3RvdHlwZSIsImFyZ3MiLCJBcnJheSIsInNsaWNlIiwiY2FsbCIsInJldHVyblZhbHVlIiwiaW5zdGFuY2UiLCJpc0Z1bmN0aW9uIiwiY2hhckF0IiwibWV0aG9kVmFsdWUiLCJhcHBseSIsImpRdWVyeSIsIndpbmRvdyIsIiR3aW5kb3ciLCJ0b0Zsb2F0IiwidmFsIiwicGFyc2VGbG9hdCIsImFuaW1hdGluZyIsInRhaWwiLCJpblRhaWwiLCJyZXNpemVTdGF0ZSIsInJlc2l6ZVRpbWVyIiwibHQiLCJ2ZXJ0aWNhbCIsInJ0bCIsImNpcmN1bGFyIiwidW5kZXJmbG93IiwibGlzdCIsImNoaWxkcmVuIiwiZXEiLCJpdGVtcyIsImFuaW1hdGlvbiIsInRyYW5zaXRpb25zIiwid3JhcCIsImNlbnRlciIsIl9saXN0IiwiX2l0ZW1zIiwiX3RhcmdldCIsIl9maXJzdCIsIl9sYXN0IiwiX3Zpc2libGUiLCJfZnVsbHl2aXNpYmxlIiwic2VsZiIsIndpZHRoIiwiaGVpZ2h0Iiwib25XaW5kb3dSZXNpemUiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiY3VycmVudFJlc2l6ZVN0YXRlIiwib24iLCJvZmYiLCJmb3VuZCIsInBhcmVudHMiLCJ0ZXN0IiwiY3NzIiwiaXRlbSIsImluZGV4IiwiY2xvc2VzdCIsInByb3BzIiwibGVmdCIsInRvcCIsIl9wcmVwYXJlIiwicmVtb3ZlIiwiX3Bvc2l0aW9uIiwibW92ZSIsIm9wdGlvbiIsIm5vdCIsInBvcyIsInBvc2l0aW9uIiwic3RvcCIsImxyYiIsImNsaXBwaW5nIiwiZGltIiwiZGltZW5zaW9uIiwiTWF0aCIsImFicyIsImZpcnN0IiwibGFzdCIsInZpc2libGUiLCJmdWxseXZpc2libGUiLCJoYXNOZXh0IiwiZW5kIiwiY2hlY2siLCJoYXNQcmV2Iiwic2Nyb2xsIiwiYW5pbWF0ZSIsImNhbGxiYWNrIiwicGFyc2VkIiwiY3VycmVudCIsInN0YXJ0IiwiY3VyciIsImlzVmlzaWJsZSIsImkiLCJfc2Nyb2xsIiwiX3Njcm9sbFRhaWwiLCJnZXQiLCJhZnRlciIsImNsb25lIiwiYXBwZW5kIiwibW92ZUJ5IiwibWluIiwibWF4IiwicHJlcGVuZCIsInByb3BlcnRpZXMiLCJvcHRzIiwibXVsdGlwbGllciIsImNvcnJlY3Rpb24iLCJ0cmFuc2Zvcm1zIiwidHJhbnNmb3JtczNkIiwiZHVyYXRpb24iLCJjb21wbGV0ZSIsImJhY2t1cCIsInRyYW5zaXRpb25EdXJhdGlvbiIsInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbiIsInRyYW5zaXRpb25Qcm9wZXJ0eSIsIm9sZENvbXBsZXRlIiwiZWFzaW5nIiwidHJhbnNmb3JtIiwib25lIiwianF1ZXJ5IiwiX2FuaW1hdGUiLCJfdXBkYXRlIiwibmV4dCIsImFkZCIsInByb3h5IiwiYyIsImZ4Iiwic3BlZWRzIiwiaWR4Iiwid2giLCJjbGlwIiwidXBkYXRlIiwiY2VudGVyT2Zmc2V0IiwiYmFjayIsImRvVXBkYXRlIiwiZWxJbiIsImVsT3V0IiwicHVzaCIsInJldmVyc2UiLCJqY2Fyb3VzZWwiLCJjbGljayJdLCJtYXBwaW5ncyI6IkNBR0MsU0FBU0EsR0FDUixhQUVBLElBQUlDLEVBQVlELEVBQUVDLFVBQVksR0FFOUJBLEVBQVVDLFFBQVUsUUFFcEIsSUFBSUMsRUFBa0Isa0JBRXRCRixFQUFVRyxZQUFjLFNBQVNDLEdBQy9CLElBQUlDLEdBQVcsRUFDYkMsRUFBNkIsaUJBQVhGLEVBQ2hCRixFQUFnQkssS0FBS0gsR0FDckIsS0FlSixPQWJJRSxHQUNGRixFQUFTSSxTQUFTRixFQUFNLEdBQUksS0FBTyxFQUUvQkEsRUFBTSxLQUNSRCxHQUFXLEVBQ00sT0FBYkMsRUFBTSxLQUNSRixJQUFXLEtBR1ksaUJBQVhBLElBQ2hCQSxFQUFTSSxTQUFTSixFQUFRLEtBQU8sR0FHNUIsQ0FDTEEsT0FBUUEsRUFDUkMsU0FBVUEsSUFJZEwsRUFBVVMsZUFBaUIsU0FBU0MsR0FHbEMsSUFGQSxJQUFJQyxFQUVvQixFQUFqQkQsRUFBUUUsUUFBWSxDQUd6QixHQUFzQixHQUZ0QkQsRUFBV0QsRUFBUUcsT0FBTyxxQkFFYkQsT0FDWCxPQUFPRCxFQUtULEdBQXNCLEdBRnRCQSxFQUFXRCxFQUFRSSxLQUFLLHFCQUVYRixPQUNYLE9BQU9ELEVBR1RELEVBQVVBLEVBQVFLLFNBR3BCLE9BQU8sTUFHVGYsRUFBVWdCLEtBQU8sU0FBU0MsR0FDeEIsTUFBTyxDQUNMaEIsUUFBVUQsRUFBVUMsUUFDcEJpQixTQUFXLEdBQ1hDLFNBQVcsS0FDWEMsVUFBVyxLQUNYQyxNQUFXdEIsRUFBRXVCLEtBQ2JDLFFBQVd4QixFQUFFdUIsS0FDYkUsU0FBV3pCLEVBQUV1QixLQUNiRyxRQUFXMUIsRUFBRXVCLEtBQ2JJLE9BQVEsV0FLTixPQUpBQyxLQUFLUixT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VSxDQUN4QjFHLEtBQU0sYUFFUnhGLEVBQUUsbUJBQW1CbU0sTUFBTSxXQUN6Qm5NLEVBQUUsY0FBY2tNLFVBQVUsU0FBVSxTQUd0Q2xNLEVBQUUsbUJBQW1CbU0sTUFBTSxXQUN6Qm5NLEVBQUUsY0FBY2tNLFVBQVUsU0FBVSxXQVoxQyxDQWVHaEkiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBqQ2Fyb3VzZWwgLSB2MC4zLjggLSAyMDE4LTA1LTMxXG4qIGh0dHA6Ly9zb3JnYWxsYS5jb20vamNhcm91c2VsL1xuKiBDb3B5cmlnaHQgKGMpIDIwMDYtMjAxOCBKYW4gU29yZ2FsbGE7IExpY2Vuc2VkIE1JVCAqL1xuKGZ1bmN0aW9uKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIHZhciBqQ2Fyb3VzZWwgPSAkLmpDYXJvdXNlbCA9IHt9O1xuXG4gIGpDYXJvdXNlbC52ZXJzaW9uID0gJzAuMy44JztcblxuICB2YXIgclJlbGF0aXZlVGFyZ2V0ID0gL14oWytcXC1dPSk/KC4rKSQvO1xuXG4gIGpDYXJvdXNlbC5wYXJzZVRhcmdldCA9IGZ1bmN0aW9uKHRhcmdldCkge1xuICAgIHZhciByZWxhdGl2ZSA9IGZhbHNlLFxuICAgICAgcGFydHMgICAgPSB0eXBlb2YgdGFyZ2V0ICE9PSAnb2JqZWN0JyA/XG4gICAgICAgIHJSZWxhdGl2ZVRhcmdldC5leGVjKHRhcmdldCkgOlxuICAgICAgICBudWxsO1xuXG4gICAgaWYgKHBhcnRzKSB7XG4gICAgICB0YXJnZXQgPSBwYXJzZUludChwYXJ0c1syXSwgMTApIHx8IDA7XG5cbiAgICAgIGlmIChwYXJ0c1sxXSkge1xuICAgICAgICByZWxhdGl2ZSA9IHRydWU7XG4gICAgICAgIGlmIChwYXJ0c1sxXSA9PT0gJy09Jykge1xuICAgICAgICAgIHRhcmdldCAqPSAtMTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodHlwZW9mIHRhcmdldCAhPT0gJ29iamVjdCcpIHtcbiAgICAgIHRhcmdldCA9IHBhcnNlSW50KHRhcmdldCwgMTApIHx8IDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHRhcmdldDogdGFyZ2V0LFxuICAgICAgcmVsYXRpdmU6IHJlbGF0aXZlXG4gICAgfTtcbiAgfTtcblxuICBqQ2Fyb3VzZWwuZGV0ZWN0Q2Fyb3VzZWwgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgdmFyIGNhcm91c2VsO1xuXG4gICAgd2hpbGUgKGVsZW1lbnQubGVuZ3RoID4gMCkge1xuICAgICAgY2Fyb3VzZWwgPSBlbGVtZW50LmZpbHRlcignW2RhdGEtamNhcm91c2VsXScpO1xuXG4gICAgICBpZiAoY2Fyb3VzZWwubGVuZ3RoID4gMCkge1xuICAgICAgICByZXR1cm4gY2Fyb3VzZWw7XG4gICAgICB9XG5cbiAgICAgIGNhcm91c2VsID0gZWxlbWVudC5maW5kKCdbZGF0YS1qY2Fyb3VzZWxdJyk7XG5cbiAgICAgIGlmIChjYXJvdXNlbC5sZW5ndGggPiAwKSB7XG4gICAgICAgIHJldHVybiBjYXJvdXNlbDtcbiAgICAgIH1cblxuICAgICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50KCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgakNhcm91c2VsLmJhc2UgPSBmdW5jdGlvbihwbHVnaW5OYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZlcnNpb246ICBqQ2Fyb3VzZWwudmVyc2lvbixcbiAgICAgIF9vcHRpb25zOiAge30sXG4gICAgICBfZWxlbWVudDogIG51bGwsXG4gICAgICBfY2Fyb3VzZWw6IG51bGwsXG4gICAgICBfaW5pdDogICAgICQubm9vcCxcbiAgICAgIF9jcmVhdGU6ICAgJC5ub29wLFxuICAgICAgX2Rlc3Ryb3k6ICAkLm5vb3AsXG4gICAgICBfcmVsb2FkOiAgICQubm9vcCxcbiAgICAgIGNyZWF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgICAgICAuYXR0cignZGF0YS0nICsgcGx1Z2luTmFtZS50b0xvd2VyQ2FzZSgpLCB0cnVlKVxuICAgICAgICAgIC5kYXRhKHBsdWdpbk5hbWUsIHRoaXMpO1xuXG4gICAgICAgIGlmIChmYWxzZSA9PT0gdGhpcy5fdHJpZ2dlcignY3JlYXRlJykpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2NyZWF0ZSgpO1xuXG4gICAgICAgIHRoaXMuX3RyaWdnZXIoJ2NyZWF0ZWVuZCcpO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfSxcbiAgICAgIGRlc3Ryb3k6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoZmFsc2UgPT09IHRoaXMuX3RyaWdnZXIoJ2Rlc3Ryb3knKSkge1xuICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fZGVzdHJveSgpO1xuXG4gICAgICAgIHRoaXMuX3RyaWdnZXIoJ2Rlc3Ryb3llbmQnKTtcblxuICAgICAgICB0aGlzLl9lbGVtZW50XG4gICAgICAgICAgLnJlbW92ZURhdGEocGx1Z2luTmFtZSlcbiAgICAgICAgICAucmVtb3ZlQXR0cignZGF0YS0nICsgcGx1Z2luTmFtZS50b0xvd2VyQ2FzZSgpKTtcblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH0sXG4gICAgICByZWxvYWQ6IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGZhbHNlID09PSB0aGlzLl90cmlnZ2VyKCdyZWxvYWQnKSkge1xuICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgICB0aGlzLm9wdGlvbnMob3B0aW9ucyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9yZWxvYWQoKTtcblxuICAgICAgICB0aGlzLl90cmlnZ2VyKCdyZWxvYWRlbmQnKTtcblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH0sXG4gICAgICBlbGVtZW50OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gICAgICB9LFxuICAgICAgb3B0aW9uczogZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIHJldHVybiAkLmV4dGVuZCh7fSwgdGhpcy5fb3B0aW9ucyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHlwZW9mIGtleSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmV0dXJuIHR5cGVvZiB0aGlzLl9vcHRpb25zW2tleV0gPT09ICd1bmRlZmluZWQnID9cbiAgICAgICAgICAgICAgbnVsbCA6XG4gICAgICAgICAgICAgIHRoaXMuX29wdGlvbnNba2V5XTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aGlzLl9vcHRpb25zW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLl9vcHRpb25zID0gJC5leHRlbmQoe30sIHRoaXMuX29wdGlvbnMsIGtleSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH0sXG4gICAgICBjYXJvdXNlbDogZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICghdGhpcy5fY2Fyb3VzZWwpIHtcbiAgICAgICAgICB0aGlzLl9jYXJvdXNlbCA9IGpDYXJvdXNlbC5kZXRlY3RDYXJvdXNlbCh0aGlzLm9wdGlvbnMoJ2Nhcm91c2VsJykgfHwgdGhpcy5fZWxlbWVudCk7XG5cbiAgICAgICAgICBpZiAoIXRoaXMuX2Nhcm91c2VsKSB7XG4gICAgICAgICAgICAkLmVycm9yKCdDb3VsZCBub3QgZGV0ZWN0IGNhcm91c2VsIGZvciBwbHVnaW4gXCInICsgcGx1Z2luTmFtZSArICdcIicpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLl9jYXJvdXNlbDtcbiAgICAgIH0sXG4gICAgICBfdHJpZ2dlcjogZnVuY3Rpb24odHlwZSwgZWxlbWVudCwgZGF0YSkge1xuICAgICAgICB2YXIgZXZlbnQsXG4gICAgICAgICAgZGVmYXVsdFByZXZlbnRlZCA9IGZhbHNlO1xuXG4gICAgICAgIGRhdGEgPSBbdGhpc10uY29uY2F0KGRhdGEgfHwgW10pO1xuXG4gICAgICAgIChlbGVtZW50IHx8IHRoaXMuX2VsZW1lbnQpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgZXZlbnQgPSAkLkV2ZW50KChwbHVnaW5OYW1lICsgJzonICsgdHlwZSkudG9Mb3dlckNhc2UoKSk7XG5cbiAgICAgICAgICAkKHRoaXMpLnRyaWdnZXIoZXZlbnQsIGRhdGEpO1xuXG4gICAgICAgICAgaWYgKGV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgICAgICBkZWZhdWx0UHJldmVudGVkID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiAhZGVmYXVsdFByZXZlbnRlZDtcbiAgICAgIH1cbiAgICB9O1xuICB9O1xuXG4gIGpDYXJvdXNlbC5wbHVnaW4gPSBmdW5jdGlvbihwbHVnaW5OYW1lLCBwbHVnaW5Qcm90b3R5cGUpIHtcbiAgICB2YXIgUGx1Z2luID0gJFtwbHVnaW5OYW1lXSA9IGZ1bmN0aW9uKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnQgPSAkKGVsZW1lbnQpO1xuICAgICAgdGhpcy5vcHRpb25zKG9wdGlvbnMpO1xuXG4gICAgICB0aGlzLl9pbml0KCk7XG4gICAgICB0aGlzLmNyZWF0ZSgpO1xuICAgIH07XG5cbiAgICBQbHVnaW4uZm4gPSBQbHVnaW4ucHJvdG90eXBlID0gJC5leHRlbmQoXG4gICAgICB7fSxcbiAgICAgIGpDYXJvdXNlbC5iYXNlKHBsdWdpbk5hbWUpLFxuICAgICAgcGx1Z2luUHJvdG90eXBlXG4gICAgKTtcblxuICAgICQuZm5bcGx1Z2luTmFtZV0gPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICB2YXIgYXJncyAgICAgICAgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpLFxuICAgICAgICByZXR1cm5WYWx1ZSA9IHRoaXM7XG5cbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciBpbnN0YW5jZSA9ICQodGhpcykuZGF0YShwbHVnaW5OYW1lKTtcblxuICAgICAgICAgIGlmICghaW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHJldHVybiAkLmVycm9yKFxuICAgICAgICAgICAgICAnQ2Fubm90IGNhbGwgbWV0aG9kcyBvbiAnICsgcGx1Z2luTmFtZSArICcgcHJpb3IgdG8gaW5pdGlhbGl6YXRpb247ICcgK1xuICAgICAgICAgICAgICAnYXR0ZW1wdGVkIHRvIGNhbGwgbWV0aG9kIFwiJyArIG9wdGlvbnMgKyAnXCInXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghJC5pc0Z1bmN0aW9uKGluc3RhbmNlW29wdGlvbnNdKSB8fCBvcHRpb25zLmNoYXJBdCgwKSA9PT0gJ18nKSB7XG4gICAgICAgICAgICByZXR1cm4gJC5lcnJvcihcbiAgICAgICAgICAgICAgJ05vIHN1Y2ggbWV0aG9kIFwiJyArIG9wdGlvbnMgKyAnXCIgZm9yICcgKyBwbHVnaW5OYW1lICsgJyBpbnN0YW5jZSdcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIG1ldGhvZFZhbHVlID0gaW5zdGFuY2Vbb3B0aW9uc10uYXBwbHkoaW5zdGFuY2UsIGFyZ3MpO1xuXG4gICAgICAgICAgaWYgKG1ldGhvZFZhbHVlICE9PSBpbnN0YW5jZSAmJiB0eXBlb2YgbWV0aG9kVmFsdWUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICByZXR1cm5WYWx1ZSA9IG1ldGhvZFZhbHVlO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIGluc3RhbmNlID0gJCh0aGlzKS5kYXRhKHBsdWdpbk5hbWUpO1xuXG4gICAgICAgICAgaWYgKGluc3RhbmNlIGluc3RhbmNlb2YgUGx1Z2luKSB7XG4gICAgICAgICAgICBpbnN0YW5jZS5yZWxvYWQob3B0aW9ucyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG5ldyBQbHVnaW4odGhpcywgb3B0aW9ucyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJldHVyblZhbHVlO1xuICAgIH07XG5cbiAgICByZXR1cm4gUGx1Z2luO1xuICB9O1xufShqUXVlcnkpKTtcblxuKGZ1bmN0aW9uKCQsIHdpbmRvdykge1xuICAndXNlIHN0cmljdCc7XG5cbiAgdmFyICR3aW5kb3cgPSAkKHdpbmRvdyk7XG5cbiAgdmFyIHRvRmxvYXQgPSBmdW5jdGlvbih2YWwpIHtcbiAgICByZXR1cm4gcGFyc2VGbG9hdCh2YWwpIHx8IDA7XG4gIH07XG5cbiAgJC5qQ2Fyb3VzZWwucGx1Z2luKCdqY2Fyb3VzZWwnLCB7XG4gICAgYW5pbWF0aW5nOiAgIGZhbHNlLFxuICAgIHRhaWw6ICAgICAgICAwLFxuICAgIGluVGFpbDogICAgICBmYWxzZSxcbiAgICByZXNpemVTdGF0ZTogbnVsbCxcbiAgICByZXNpemVUaW1lcjogbnVsbCxcbiAgICBsdDogICAgICAgICAgbnVsbCxcbiAgICB2ZXJ0aWNhbDogICAgZmFsc2UsXG4gICAgcnRsOiAgICAgICAgIGZhbHNlLFxuICAgIGNpcmN1bGFyOiAgICBmYWxzZSxcbiAgICB1bmRlcmZsb3c6ICAgZmFsc2UsXG4gICAgcmVsYXRpdmU6ICAgIGZhbHNlLFxuXG4gICAgX29wdGlvbnM6IHtcbiAgICAgIGxpc3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50KCkuY2hpbGRyZW4oKS5lcSgwKTtcbiAgICAgIH0sXG4gICAgICBpdGVtczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxpc3QoKS5jaGlsZHJlbigpO1xuICAgICAgfSxcbiAgICAgIGFuaW1hdGlvbjogICA0MDAsXG4gICAgICB0cmFuc2l0aW9uczogZmFsc2UsXG4gICAgICB3cmFwOiAgICAgICAgbnVsbCxcbiAgICAgIHZlcnRpY2FsOiAgICBudWxsLFxuICAgICAgcnRsOiAgICAgICAgIG51bGwsXG4gICAgICBjZW50ZXI6ICAgICAgZmFsc2VcbiAgICB9LFxuXG4gICAgLy8gUHJvdGVjdGVkLCBkb24ndCBhY2Nlc3MgZGlyZWN0bHlcbiAgICBfbGlzdDogICAgICAgICBudWxsLFxuICAgIF9pdGVtczogICAgICAgIG51bGwsXG4gICAgX3RhcmdldDogICAgICAgJCgpLFxuICAgIF9maXJzdDogICAgICAgICQoKSxcbiAgICBfbGFzdDogICAgICAgICAkKCksXG4gICAgX3Zpc2libGU6ICAgICAgJCgpLFxuICAgIF9mdWxseXZpc2libGU6ICQoKSxcbiAgICBfaW5pdDogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICAgIHNlbGYucmVzaXplU3RhdGUgPSAkd2luZG93LndpZHRoKCkgKyAneCcgKyAkd2luZG93LmhlaWdodCgpO1xuXG4gICAgICB0aGlzLm9uV2luZG93UmVzaXplID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChzZWxmLnJlc2l6ZVRpbWVyKSB7XG4gICAgICAgICAgY2xlYXJUaW1lb3V0KHNlbGYucmVzaXplVGltZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2VsZi5yZXNpemVUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIGN1cnJlbnRSZXNpemVTdGF0ZSA9ICR3aW5kb3cud2lkdGgoKSArICd4JyArICR3aW5kb3cuaGVpZ2h0KCk7XG5cbiAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgd2luZG93IHNpemUgYWN0dWFsbHkgY2hhbmdlZC5cbiAgICAgICAgICAvLyBpT1MgbWlnaHQgdHJpZ2dlciByZXNpemUgZXZlbnRzIG9uIHBhZ2Ugc2Nyb2xsLlxuICAgICAgICAgIGlmIChjdXJyZW50UmVzaXplU3RhdGUgPT09IHNlbGYucmVzaXplU3RhdGUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBzZWxmLnJlc2l6ZVN0YXRlID0gY3VycmVudFJlc2l6ZVN0YXRlO1xuICAgICAgICAgIHNlbGYucmVsb2FkKCk7XG4gICAgICAgIH0sIDEwMCk7XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIF9jcmVhdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5fcmVsb2FkKCk7XG5cbiAgICAgICR3aW5kb3cub24oJ3Jlc2l6ZS5qY2Fyb3VzZWwnLCB0aGlzLm9uV2luZG93UmVzaXplKTtcbiAgICB9LFxuICAgIF9kZXN0cm95OiBmdW5jdGlvbigpIHtcbiAgICAgICR3aW5kb3cub2ZmKCdyZXNpemUuamNhcm91c2VsJywgdGhpcy5vbldpbmRvd1Jlc2l6ZSk7XG4gICAgfSxcbiAgICBfcmVsb2FkOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMudmVydGljYWwgPSB0aGlzLm9wdGlvbnMoJ3ZlcnRpY2FsJyk7XG5cbiAgICAgIGlmICh0aGlzLnZlcnRpY2FsID09IG51bGwpIHtcbiAgICAgICAgdGhpcy52ZXJ0aWNhbCA9IHRvRmxvYXQodGhpcy5saXN0KCkuaGVpZ2h0KCkpID4gdG9GbG9hdCh0aGlzLmxpc3QoKS53aWR0aCgpKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5ydGwgPSB0aGlzLm9wdGlvbnMoJ3J0bCcpO1xuXG4gICAgICBpZiAodGhpcy5ydGwgPT0gbnVsbCkge1xuICAgICAgICB0aGlzLnJ0bCA9IChmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgaWYgKCgnJyArIGVsZW1lbnQuYXR0cignZGlyJykpLnRvTG93ZXJDYXNlKCkgPT09ICdydGwnKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgZm91bmQgPSBmYWxzZTtcblxuICAgICAgICAgIGVsZW1lbnQucGFyZW50cygnW2Rpcl0nKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKCgvcnRsL2kpLnRlc3QoJCh0aGlzKS5hdHRyKCdkaXInKSkpIHtcbiAgICAgICAgICAgICAgZm91bmQgPSB0cnVlO1xuICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICByZXR1cm4gZm91bmQ7XG4gICAgICAgIH0odGhpcy5fZWxlbWVudCkpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmx0ID0gdGhpcy52ZXJ0aWNhbCA/ICd0b3AnIDogJ2xlZnQnO1xuXG4gICAgICAvLyBFbnN1cmUgYmVmb3JlIGNsb3Nlc3QoKSBjYWxsXG4gICAgICB0aGlzLnJlbGF0aXZlID0gdGhpcy5saXN0KCkuY3NzKCdwb3NpdGlvbicpID09PSAncmVsYXRpdmUnO1xuXG4gICAgICAvLyBGb3JjZSBsaXN0IGFuZCBpdGVtcyByZWxvYWRcbiAgICAgIHRoaXMuX2xpc3QgID0gbnVsbDtcbiAgICAgIHRoaXMuX2l0ZW1zID0gbnVsbDtcblxuICAgICAgdmFyIGl0ZW0gPSB0aGlzLmluZGV4KHRoaXMuX3RhcmdldCkgPj0gMCA/XG4gICAgICAgIHRoaXMuX3RhcmdldCA6XG4gICAgICAgIHRoaXMuY2xvc2VzdCgpO1xuXG4gICAgICAvLyBfcHJlcGFyZSgpIG5lZWRzIHRoaXMgaGVyZVxuICAgICAgdGhpcy5jaXJjdWxhciAgPSB0aGlzLm9wdGlvbnMoJ3dyYXAnKSA9PT0gJ2NpcmN1bGFyJztcbiAgICAgIHRoaXMudW5kZXJmbG93ID0gZmFsc2U7XG5cbiAgICAgIHZhciBwcm9wcyA9IHsnbGVmdCc6IDAsICd0b3AnOiAwfTtcblxuICAgICAgaWYgKGl0ZW0ubGVuZ3RoID4gMCkge1xuICAgICAgICB0aGlzLl9wcmVwYXJlKGl0ZW0pO1xuICAgICAgICB0aGlzLmxpc3QoKS5maW5kKCdbZGF0YS1qY2Fyb3VzZWwtY2xvbmVdJykucmVtb3ZlKCk7XG5cbiAgICAgICAgLy8gRm9yY2UgaXRlbXMgcmVsb2FkXG4gICAgICAgIHRoaXMuX2l0ZW1zID0gbnVsbDtcblxuICAgICAgICB0aGlzLnVuZGVyZmxvdyA9IHRoaXMuX2Z1bGx5dmlzaWJsZS5sZW5ndGggPj0gdGhpcy5pdGVtcygpLmxlbmd0aDtcbiAgICAgICAgdGhpcy5jaXJjdWxhciAgPSB0aGlzLmNpcmN1bGFyICYmICF0aGlzLnVuZGVyZmxvdztcblxuICAgICAgICBwcm9wc1t0aGlzLmx0XSA9IHRoaXMuX3Bvc2l0aW9uKGl0ZW0pICsgJ3B4JztcbiAgICAgIH1cblxuICAgICAgdGhpcy5tb3ZlKHByb3BzKTtcblxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBsaXN0OiBmdW5jdGlvbigpIHtcbiAgICAgIGlmICh0aGlzLl9saXN0ID09PSBudWxsKSB7XG4gICAgICAgIHZhciBvcHRpb24gPSB0aGlzLm9wdGlvbnMoJ2xpc3QnKTtcbiAgICAgICAgdGhpcy5fbGlzdCA9ICQuaXNGdW5jdGlvbihvcHRpb24pID8gb3B0aW9uLmNhbGwodGhpcykgOiB0aGlzLl9lbGVtZW50LmZpbmQob3B0aW9uKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuX2xpc3Q7XG4gICAgfSxcbiAgICBpdGVtczogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAodGhpcy5faXRlbXMgPT09IG51bGwpIHtcbiAgICAgICAgdmFyIG9wdGlvbiA9IHRoaXMub3B0aW9ucygnaXRlbXMnKTtcbiAgICAgICAgdGhpcy5faXRlbXMgPSAoJC5pc0Z1bmN0aW9uKG9wdGlvbikgPyBvcHRpb24uY2FsbCh0aGlzKSA6IHRoaXMubGlzdCgpLmZpbmQob3B0aW9uKSkubm90KCdbZGF0YS1qY2Fyb3VzZWwtY2xvbmVdJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLl9pdGVtcztcbiAgICB9LFxuICAgIGluZGV4OiBmdW5jdGlvbihpdGVtKSB7XG4gICAgICByZXR1cm4gdGhpcy5pdGVtcygpLmluZGV4KGl0ZW0pO1xuICAgIH0sXG4gICAgY2xvc2VzdDogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgc2VsZiAgICA9IHRoaXMsXG4gICAgICAgIHBvcyAgICAgPSB0aGlzLmxpc3QoKS5wb3NpdGlvbigpW3RoaXMubHRdLFxuICAgICAgICBjbG9zZXN0ID0gJCgpLCAvLyBFbnN1cmUgd2UncmUgcmV0dXJuaW5nIGEgalF1ZXJ5IGluc3RhbmNlXG4gICAgICAgIHN0b3AgICAgPSBmYWxzZSxcbiAgICAgICAgbHJiICAgICA9IHRoaXMudmVydGljYWwgPyAnYm90dG9tJyA6ICh0aGlzLnJ0bCAmJiAhdGhpcy5yZWxhdGl2ZSA/ICdsZWZ0JyA6ICdyaWdodCcpLFxuICAgICAgICB3aWR0aDtcblxuICAgICAgaWYgKHRoaXMucnRsICYmIHRoaXMucmVsYXRpdmUgJiYgIXRoaXMudmVydGljYWwpIHtcbiAgICAgICAgcG9zICs9IHRvRmxvYXQodGhpcy5saXN0KCkud2lkdGgoKSkgLSB0aGlzLmNsaXBwaW5nKCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuaXRlbXMoKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICBjbG9zZXN0ID0gJCh0aGlzKTtcblxuICAgICAgICBpZiAoc3RvcCkge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBkaW0gPSBzZWxmLmRpbWVuc2lvbihjbG9zZXN0KTtcblxuICAgICAgICBwb3MgKz0gZGltO1xuXG4gICAgICAgIGlmIChwb3MgPj0gMCkge1xuICAgICAgICAgIHdpZHRoID0gZGltIC0gdG9GbG9hdChjbG9zZXN0LmNzcygnbWFyZ2luLScgKyBscmIpKTtcblxuICAgICAgICAgIGlmICgoTWF0aC5hYnMocG9zKSAtIGRpbSArICh3aWR0aCAvIDIpKSA8PSAwKSB7XG4gICAgICAgICAgICBzdG9wID0gdHJ1ZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG5cblxuICAgICAgcmV0dXJuIGNsb3Nlc3Q7XG4gICAgfSxcbiAgICB0YXJnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3RhcmdldDtcbiAgICB9LFxuICAgIGZpcnN0OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl9maXJzdDtcbiAgICB9LFxuICAgIGxhc3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2xhc3Q7XG4gICAgfSxcbiAgICB2aXNpYmxlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl92aXNpYmxlO1xuICAgIH0sXG4gICAgZnVsbHl2aXNpYmxlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl9mdWxseXZpc2libGU7XG4gICAgfSxcbiAgICBoYXNOZXh0OiBmdW5jdGlvbigpIHtcbiAgICAgIGlmIChmYWxzZSA9PT0gdGhpcy5fdHJpZ2dlcignaGFzbmV4dCcpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICB2YXIgd3JhcCA9IHRoaXMub3B0aW9ucygnd3JhcCcpLFxuICAgICAgICBlbmQgPSB0aGlzLml0ZW1zKCkubGVuZ3RoIC0gMSxcbiAgICAgICAgY2hlY2sgPSB0aGlzLm9wdGlvbnMoJ2NlbnRlcicpID8gdGhpcy5fdGFyZ2V0IDogdGhpcy5fbGFzdDtcblxuICAgICAgcmV0dXJuIGVuZCA+PSAwICYmICF0aGlzLnVuZGVyZmxvdyAmJlxuICAgICAgKCh3cmFwICYmIHdyYXAgIT09ICdmaXJzdCcpIHx8XG4gICAgICAgICh0aGlzLmluZGV4KGNoZWNrKSA8IGVuZCkgfHxcbiAgICAgICAgKHRoaXMudGFpbCAmJiAhdGhpcy5pblRhaWwpKSA/IHRydWUgOiBmYWxzZTtcbiAgICB9LFxuICAgIGhhc1ByZXY6IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKGZhbHNlID09PSB0aGlzLl90cmlnZ2VyKCdoYXNwcmV2JykpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIHZhciB3cmFwID0gdGhpcy5vcHRpb25zKCd3cmFwJyk7XG5cbiAgICAgIHJldHVybiB0aGlzLml0ZW1zKCkubGVuZ3RoID4gMCAmJiAhdGhpcy51bmRlcmZsb3cgJiZcbiAgICAgICgod3JhcCAmJiB3cmFwICE9PSAnbGFzdCcpIHx8XG4gICAgICAgICh0aGlzLmluZGV4KHRoaXMuX2ZpcnN0KSA+IDApIHx8XG4gICAgICAgICh0aGlzLnRhaWwgJiYgdGhpcy5pblRhaWwpKSA/IHRydWUgOiBmYWxzZTtcbiAgICB9LFxuICAgIGNsaXBwaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0b0Zsb2F0KHRoaXMuX2VsZW1lbnRbJ2lubmVyJyArICh0aGlzLnZlcnRpY2FsID8gJ0hlaWdodCcgOiAnV2lkdGgnKV0oKSk7XG4gICAgfSxcbiAgICBkaW1lbnNpb246IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgIHJldHVybiB0b0Zsb2F0KGVsZW1lbnRbJ291dGVyJyArICh0aGlzLnZlcnRpY2FsID8gJ0hlaWdodCcgOiAnV2lkdGgnKV0odHJ1ZSkpO1xuICAgIH0sXG4gICAgc2Nyb2xsOiBmdW5jdGlvbih0YXJnZXQsIGFuaW1hdGUsIGNhbGxiYWNrKSB7XG4gICAgICBpZiAodGhpcy5hbmltYXRpbmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG5cbiAgICAgIGlmIChmYWxzZSA9PT0gdGhpcy5fdHJpZ2dlcignc2Nyb2xsJywgbnVsbCwgW3RhcmdldCwgYW5pbWF0ZV0pKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuXG4gICAgICBpZiAoJC5pc0Z1bmN0aW9uKGFuaW1hdGUpKSB7XG4gICAgICAgIGNhbGxiYWNrID0gYW5pbWF0ZTtcbiAgICAgICAgYW5pbWF0ZSAgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICB2YXIgcGFyc2VkID0gJC5qQ2Fyb3VzZWwucGFyc2VUYXJnZXQodGFyZ2V0KTtcblxuICAgICAgaWYgKHBhcnNlZC5yZWxhdGl2ZSkge1xuICAgICAgICB2YXIgZW5kICAgID0gdGhpcy5pdGVtcygpLmxlbmd0aCAtIDEsXG4gICAgICAgICAgc2Nyb2xsID0gTWF0aC5hYnMocGFyc2VkLnRhcmdldCksXG4gICAgICAgICAgd3JhcCAgID0gdGhpcy5vcHRpb25zKCd3cmFwJyksXG4gICAgICAgICAgY3VycmVudCxcbiAgICAgICAgICBmaXJzdCxcbiAgICAgICAgICBpbmRleCxcbiAgICAgICAgICBzdGFydCxcbiAgICAgICAgICBjdXJyLFxuICAgICAgICAgIGlzVmlzaWJsZSxcbiAgICAgICAgICBwcm9wcyxcbiAgICAgICAgICBpO1xuXG4gICAgICAgIGlmIChwYXJzZWQudGFyZ2V0ID4gMCkge1xuICAgICAgICAgIHZhciBsYXN0ID0gdGhpcy5pbmRleCh0aGlzLl9sYXN0KTtcblxuICAgICAgICAgIGlmIChsYXN0ID49IGVuZCAmJiB0aGlzLnRhaWwpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5pblRhaWwpIHtcbiAgICAgICAgICAgICAgdGhpcy5fc2Nyb2xsVGFpbChhbmltYXRlLCBjYWxsYmFjayk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBpZiAod3JhcCA9PT0gJ2JvdGgnIHx8IHdyYXAgPT09ICdsYXN0Jykge1xuICAgICAgICAgICAgICAgIHRoaXMuX3Njcm9sbCgwLCBhbmltYXRlLCBjYWxsYmFjayk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKCQuaXNGdW5jdGlvbihjYWxsYmFjaykpIHtcbiAgICAgICAgICAgICAgICAgIGNhbGxiYWNrLmNhbGwodGhpcywgZmFsc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjdXJyZW50ID0gdGhpcy5pbmRleCh0aGlzLl90YXJnZXQpO1xuXG4gICAgICAgICAgICBpZiAoKHRoaXMudW5kZXJmbG93ICYmIGN1cnJlbnQgPT09IGVuZCAmJiAod3JhcCA9PT0gJ2NpcmN1bGFyJyB8fCB3cmFwID09PSAnYm90aCcgfHwgd3JhcCA9PT0gJ2xhc3QnKSkgfHxcbiAgICAgICAgICAgICAgKCF0aGlzLnVuZGVyZmxvdyAmJiBsYXN0ID09PSBlbmQgJiYgKHdyYXAgPT09ICdib3RoJyB8fCB3cmFwID09PSAnbGFzdCcpKSkge1xuICAgICAgICAgICAgICB0aGlzLl9zY3JvbGwoMCwgYW5pbWF0ZSwgY2FsbGJhY2spO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaW5kZXggPSBjdXJyZW50ICsgc2Nyb2xsO1xuXG4gICAgICAgICAgICAgIGlmICh0aGlzLmNpcmN1bGFyICYmIGluZGV4ID4gZW5kKSB7XG4gICAgICAgICAgICAgICAgaSA9IGVuZDtcbiAgICAgICAgICAgICAgICBjdXJyID0gdGhpcy5pdGVtcygpLmdldCgtMSk7XG5cbiAgICAgICAgICAgICAgICB3aGlsZSAoaSsrIDwgaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgIGN1cnIgPSB0aGlzLml0ZW1zKCkuZXEoMCk7XG4gICAgICAgICAgICAgICAgICBpc1Zpc2libGUgPSB0aGlzLl92aXNpYmxlLmluZGV4KGN1cnIpID49IDA7XG5cbiAgICAgICAgICAgICAgICAgIGlmIChpc1Zpc2libGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3Vyci5hZnRlcihjdXJyLmNsb25lKHRydWUpLmF0dHIoJ2RhdGEtamNhcm91c2VsLWNsb25lJywgdHJ1ZSkpO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICB0aGlzLmxpc3QoKS5hcHBlbmQoY3Vycik7XG5cbiAgICAgICAgICAgICAgICAgIGlmICghaXNWaXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgIHByb3BzID0ge307XG4gICAgICAgICAgICAgICAgICAgIHByb3BzW3RoaXMubHRdID0gdGhpcy5kaW1lbnNpb24oY3Vycik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubW92ZUJ5KHByb3BzKTtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgLy8gRm9yY2UgaXRlbXMgcmVsb2FkXG4gICAgICAgICAgICAgICAgICB0aGlzLl9pdGVtcyA9IG51bGw7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGhpcy5fc2Nyb2xsKGN1cnIsIGFuaW1hdGUsIGNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9zY3JvbGwoTWF0aC5taW4oaW5kZXgsIGVuZCksIGFuaW1hdGUsIGNhbGxiYWNrKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAodGhpcy5pblRhaWwpIHtcbiAgICAgICAgICAgIHRoaXMuX3Njcm9sbChNYXRoLm1heCgodGhpcy5pbmRleCh0aGlzLl9maXJzdCkgLSBzY3JvbGwpICsgMSwgMCksIGFuaW1hdGUsIGNhbGxiYWNrKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZmlyc3QgID0gdGhpcy5pbmRleCh0aGlzLl9maXJzdCk7XG4gICAgICAgICAgICBjdXJyZW50ID0gdGhpcy5pbmRleCh0aGlzLl90YXJnZXQpO1xuICAgICAgICAgICAgc3RhcnQgID0gdGhpcy51bmRlcmZsb3cgPyBjdXJyZW50IDogZmlyc3Q7XG4gICAgICAgICAgICBpbmRleCAgPSBzdGFydCAtIHNjcm9sbDtcblxuICAgICAgICAgICAgaWYgKHN0YXJ0IDw9IDAgJiYgKCh0aGlzLnVuZGVyZmxvdyAmJiB3cmFwID09PSAnY2lyY3VsYXInKSB8fCB3cmFwID09PSAnYm90aCcgfHwgd3JhcCA9PT0gJ2ZpcnN0JykpIHtcbiAgICAgICAgICAgICAgdGhpcy5fc2Nyb2xsKGVuZCwgYW5pbWF0ZSwgY2FsbGJhY2spO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaWYgKHRoaXMuY2lyY3VsYXIgJiYgaW5kZXggPCAwKSB7XG4gICAgICAgICAgICAgICAgaSAgICA9IGluZGV4O1xuICAgICAgICAgICAgICAgIGN1cnIgPSB0aGlzLml0ZW1zKCkuZ2V0KDApO1xuXG4gICAgICAgICAgICAgICAgd2hpbGUgKGkrKyA8IDApIHtcbiAgICAgICAgICAgICAgICAgIGN1cnIgPSB0aGlzLml0ZW1zKCkuZXEoLTEpO1xuICAgICAgICAgICAgICAgICAgaXNWaXNpYmxlID0gdGhpcy5fdmlzaWJsZS5pbmRleChjdXJyKSA+PSAwO1xuXG4gICAgICAgICAgICAgICAgICBpZiAoaXNWaXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnIuYWZ0ZXIoY3Vyci5jbG9uZSh0cnVlKS5hdHRyKCdkYXRhLWpjYXJvdXNlbC1jbG9uZScsIHRydWUpKTtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgdGhpcy5saXN0KCkucHJlcGVuZChjdXJyKTtcblxuICAgICAgICAgICAgICAgICAgLy8gRm9yY2UgaXRlbXMgcmVsb2FkXG4gICAgICAgICAgICAgICAgICB0aGlzLl9pdGVtcyA9IG51bGw7XG5cbiAgICAgICAgICAgICAgICAgIHZhciBkaW0gPSB0aGlzLmRpbWVuc2lvbihjdXJyKTtcblxuICAgICAgICAgICAgICAgICAgcHJvcHMgPSB7fTtcbiAgICAgICAgICAgICAgICAgIHByb3BzW3RoaXMubHRdID0gLWRpbTtcbiAgICAgICAgICAgICAgICAgIHRoaXMubW92ZUJ5KHByb3BzKTtcblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoaXMuX3Njcm9sbChjdXJyLCBhbmltYXRlLCBjYWxsYmFjayk7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fc2Nyb2xsKE1hdGgubWF4KGluZGV4LCAwKSwgYW5pbWF0ZSwgY2FsbGJhY2spO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9zY3JvbGwocGFyc2VkLnRhcmdldCwgYW5pbWF0ZSwgY2FsbGJhY2spO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl90cmlnZ2VyKCdzY3JvbGxlbmQnKTtcblxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBtb3ZlQnk6IGZ1bmN0aW9uKHByb3BlcnRpZXMsIG9wdHMpIHtcbiAgICAgIHZhciBwb3NpdGlvbiA9IHRoaXMubGlzdCgpLnBvc2l0aW9uKCksXG4gICAgICAgIG11bHRpcGxpZXIgPSAxLFxuICAgICAgICBjb3JyZWN0aW9uID0gMDtcblxuICAgICAgaWYgKHRoaXMucnRsICYmICF0aGlzLnZlcnRpY2FsKSB7XG4gICAgICAgIG11bHRpcGxpZXIgPSAtMTtcblxuICAgICAgICBpZiAodGhpcy5yZWxhdGl2ZSkge1xuICAgICAgICAgIGNvcnJlY3Rpb24gPSB0b0Zsb2F0KHRoaXMubGlzdCgpLndpZHRoKCkpIC0gdGhpcy5jbGlwcGluZygpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9wZXJ0aWVzLmxlZnQpIHtcbiAgICAgICAgcHJvcGVydGllcy5sZWZ0ID0gKHRvRmxvYXQocG9zaXRpb24ubGVmdCkgKyBjb3JyZWN0aW9uICsgdG9GbG9hdChwcm9wZXJ0aWVzLmxlZnQpICogbXVsdGlwbGllcikgKyAncHgnO1xuICAgICAgfVxuXG4gICAgICBpZiAocHJvcGVydGllcy50b3ApIHtcbiAgICAgICAgcHJvcGVydGllcy50b3AgPSAodG9GbG9hdChwb3NpdGlvbi50b3ApICsgY29ycmVjdGlvbiArIHRvRmxvYXQocHJvcGVydGllcy50b3ApICogbXVsdGlwbGllcikgKyAncHgnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5tb3ZlKHByb3BlcnRpZXMsIG9wdHMpO1xuICAgIH0sXG4gICAgbW92ZTogZnVuY3Rpb24ocHJvcGVydGllcywgb3B0cykge1xuICAgICAgb3B0cyA9IG9wdHMgfHwge307XG5cbiAgICAgIHZhciBvcHRpb24gICAgICAgPSB0aGlzLm9wdGlvbnMoJ3RyYW5zaXRpb25zJyksXG4gICAgICAgIHRyYW5zaXRpb25zICA9ICEhb3B0aW9uLFxuICAgICAgICB0cmFuc2Zvcm1zICAgPSAhIW9wdGlvbi50cmFuc2Zvcm1zLFxuICAgICAgICB0cmFuc2Zvcm1zM2QgPSAhIW9wdGlvbi50cmFuc2Zvcm1zM2QsXG4gICAgICAgIGR1cmF0aW9uICAgICA9IG9wdHMuZHVyYXRpb24gfHwgMCxcbiAgICAgICAgbGlzdCAgICAgICAgID0gdGhpcy5saXN0KCk7XG5cbiAgICAgIGlmICghdHJhbnNpdGlvbnMgJiYgZHVyYXRpb24gPiAwKSB7XG4gICAgICAgIGxpc3QuYW5pbWF0ZShwcm9wZXJ0aWVzLCBvcHRzKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgY29tcGxldGUgPSBvcHRzLmNvbXBsZXRlIHx8ICQubm9vcCxcbiAgICAgICAgY3NzID0ge307XG5cbiAgICAgIGlmICh0cmFuc2l0aW9ucykge1xuICAgICAgICB2YXIgYmFja3VwID0ge1xuICAgICAgICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uOiBsaXN0LmNzcygndHJhbnNpdGlvbkR1cmF0aW9uJyksXG4gICAgICAgICAgICB0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb246IGxpc3QuY3NzKCd0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24nKSxcbiAgICAgICAgICAgIHRyYW5zaXRpb25Qcm9wZXJ0eTogbGlzdC5jc3MoJ3RyYW5zaXRpb25Qcm9wZXJ0eScpXG4gICAgICAgICAgfSxcbiAgICAgICAgICBvbGRDb21wbGV0ZSA9IGNvbXBsZXRlO1xuXG4gICAgICAgIGNvbXBsZXRlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgJCh0aGlzKS5jc3MoYmFja3VwKTtcbiAgICAgICAgICBvbGRDb21wbGV0ZS5jYWxsKHRoaXMpO1xuICAgICAgICB9O1xuICAgICAgICBjc3MgPSB7XG4gICAgICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uOiAoZHVyYXRpb24gPiAwID8gZHVyYXRpb24gLyAxMDAwIDogMCkgKyAncycsXG4gICAgICAgICAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uOiBvcHRpb24uZWFzaW5nIHx8IG9wdHMuZWFzaW5nLFxuICAgICAgICAgIHRyYW5zaXRpb25Qcm9wZXJ0eTogZHVyYXRpb24gPiAwID8gKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKHRyYW5zZm9ybXMgfHwgdHJhbnNmb3JtczNkKSB7XG4gICAgICAgICAgICAgIC8vIFdlIGhhdmUgdG8gdXNlICdhbGwnIGJlY2F1c2UgalF1ZXJ5IGRvZXNuJ3QgcHJlZml4XG4gICAgICAgICAgICAgIC8vIGNzcyB2YWx1ZXMsIGxpa2UgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtO1xuICAgICAgICAgICAgICByZXR1cm4gJ2FsbCc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBwcm9wZXJ0aWVzLmxlZnQgPyAnbGVmdCcgOiAndG9wJztcbiAgICAgICAgICB9KSgpIDogJ25vbmUnLFxuICAgICAgICAgIHRyYW5zZm9ybTogJ25vbmUnXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIGlmICh0cmFuc2Zvcm1zM2QpIHtcbiAgICAgICAgY3NzLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGUzZCgnICsgKHByb3BlcnRpZXMubGVmdCB8fCAwKSArICcsJyArIChwcm9wZXJ0aWVzLnRvcCB8fCAwKSArICcsMCknO1xuICAgICAgfSBlbHNlIGlmICh0cmFuc2Zvcm1zKSB7XG4gICAgICAgIGNzcy50cmFuc2Zvcm0gPSAndHJhbnNsYXRlKCcgKyAocHJvcGVydGllcy5sZWZ0IHx8IDApICsgJywnICsgKHByb3BlcnRpZXMudG9wIHx8IDApICsgJyknO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJC5leHRlbmQoY3NzLCBwcm9wZXJ0aWVzKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRyYW5zaXRpb25zICYmIGR1cmF0aW9uID4gMCkge1xuICAgICAgICBsaXN0Lm9uZSgndHJhbnNpdGlvbmVuZCB3ZWJraXRUcmFuc2l0aW9uRW5kIG9UcmFuc2l0aW9uRW5kIG90cmFuc2l0aW9uZW5kIE1TVHJhbnNpdGlvbkVuZCcsIGNvbXBsZXRlKTtcbiAgICAgIH1cblxuICAgICAgbGlzdC5jc3MoY3NzKTtcblxuICAgICAgaWYgKGR1cmF0aW9uIDw9IDApIHtcbiAgICAgICAgbGlzdC5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGNvbXBsZXRlLmNhbGwodGhpcyk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG4gICAgX3Njcm9sbDogZnVuY3Rpb24oaXRlbSwgYW5pbWF0ZSwgY2FsbGJhY2spIHtcbiAgICAgIGlmICh0aGlzLmFuaW1hdGluZykge1xuICAgICAgICBpZiAoJC5pc0Z1bmN0aW9uKGNhbGxiYWNrKSkge1xuICAgICAgICAgIGNhbGxiYWNrLmNhbGwodGhpcywgZmFsc2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgaXRlbSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgaXRlbSA9IHRoaXMuaXRlbXMoKS5lcShpdGVtKTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGl0ZW0uanF1ZXJ5ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBpdGVtID0gJChpdGVtKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW0ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGlmICgkLmlzRnVuY3Rpb24oY2FsbGJhY2spKSB7XG4gICAgICAgICAgY2FsbGJhY2suY2FsbCh0aGlzLCBmYWxzZSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cblxuICAgICAgdGhpcy5pblRhaWwgPSBmYWxzZTtcblxuICAgICAgdGhpcy5fcHJlcGFyZShpdGVtKTtcblxuICAgICAgdmFyIHBvcyAgICAgPSB0aGlzLl9wb3NpdGlvbihpdGVtKSxcbiAgICAgICAgY3VyclBvcyA9IHRvRmxvYXQodGhpcy5saXN0KCkucG9zaXRpb24oKVt0aGlzLmx0XSk7XG5cbiAgICAgIGlmIChwb3MgPT09IGN1cnJQb3MpIHtcbiAgICAgICAgaWYgKCQuaXNGdW5jdGlvbihjYWxsYmFjaykpIHtcbiAgICAgICAgICBjYWxsYmFjay5jYWxsKHRoaXMsIGZhbHNlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJvcGVydGllcyA9IHt9O1xuICAgICAgcHJvcGVydGllc1t0aGlzLmx0XSA9IHBvcyArICdweCc7XG5cbiAgICAgIHRoaXMuX2FuaW1hdGUocHJvcGVydGllcywgYW5pbWF0ZSwgY2FsbGJhY2spO1xuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIF9zY3JvbGxUYWlsOiBmdW5jdGlvbihhbmltYXRlLCBjYWxsYmFjaykge1xuICAgICAgaWYgKHRoaXMuYW5pbWF0aW5nIHx8ICF0aGlzLnRhaWwpIHtcbiAgICAgICAgaWYgKCQuaXNGdW5jdGlvbihjYWxsYmFjaykpIHtcbiAgICAgICAgICBjYWxsYmFjay5jYWxsKHRoaXMsIGZhbHNlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuXG4gICAgICB2YXIgcG9zID0gdGhpcy5saXN0KCkucG9zaXRpb24oKVt0aGlzLmx0XTtcblxuICAgICAgaWYgKHRoaXMucnRsICYmIHRoaXMucmVsYXRpdmUgJiYgIXRoaXMudmVydGljYWwpIHtcbiAgICAgICAgcG9zICs9IHRvRmxvYXQodGhpcy5saXN0KCkud2lkdGgoKSkgLSB0aGlzLmNsaXBwaW5nKCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnJ0bCAmJiAhdGhpcy52ZXJ0aWNhbCkge1xuICAgICAgICBwb3MgKz0gdGhpcy50YWlsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcG9zIC09IHRoaXMudGFpbDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5pblRhaWwgPSB0cnVlO1xuXG4gICAgICB2YXIgcHJvcGVydGllcyA9IHt9O1xuICAgICAgcHJvcGVydGllc1t0aGlzLmx0XSA9IHBvcyArICdweCc7XG5cbiAgICAgIHRoaXMuX3VwZGF0ZSh7XG4gICAgICAgIHRhcmdldDogICAgICAgdGhpcy5fdGFyZ2V0Lm5leHQoKSxcbiAgICAgICAgZnVsbHl2aXNpYmxlOiB0aGlzLl9mdWxseXZpc2libGUuc2xpY2UoMSkuYWRkKHRoaXMuX3Zpc2libGUubGFzdCgpKVxuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuX2FuaW1hdGUocHJvcGVydGllcywgYW5pbWF0ZSwgY2FsbGJhY2spO1xuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIF9hbmltYXRlOiBmdW5jdGlvbihwcm9wZXJ0aWVzLCBhbmltYXRlLCBjYWxsYmFjaykge1xuICAgICAgY2FsbGJhY2sgPSBjYWxsYmFjayB8fCAkLm5vb3A7XG5cbiAgICAgIGlmIChmYWxzZSA9PT0gdGhpcy5fdHJpZ2dlcignYW5pbWF0ZScpKSB7XG4gICAgICAgIGNhbGxiYWNrLmNhbGwodGhpcywgZmFsc2UpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH1cblxuICAgICAgdGhpcy5hbmltYXRpbmcgPSB0cnVlO1xuXG4gICAgICB2YXIgYW5pbWF0aW9uID0gdGhpcy5vcHRpb25zKCdhbmltYXRpb24nKSxcbiAgICAgICAgY29tcGxldGUgID0gJC5wcm94eShmdW5jdGlvbigpIHtcbiAgICAgICAgICB0aGlzLmFuaW1hdGluZyA9IGZhbHNlO1xuXG4gICAgICAgICAgdmFyIGMgPSB0aGlzLmxpc3QoKS5maW5kKCdbZGF0YS1qY2Fyb3VzZWwtY2xvbmVdJyk7XG5cbiAgICAgICAgICBpZiAoYy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBjLnJlbW92ZSgpO1xuICAgICAgICAgICAgdGhpcy5fcmVsb2FkKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdGhpcy5fdHJpZ2dlcignYW5pbWF0ZWVuZCcpO1xuXG4gICAgICAgICAgY2FsbGJhY2suY2FsbCh0aGlzLCB0cnVlKTtcbiAgICAgICAgfSwgdGhpcyk7XG5cbiAgICAgIHZhciBvcHRzID0gdHlwZW9mIGFuaW1hdGlvbiA9PT0gJ29iamVjdCcgP1xuICAgICAgICAkLmV4dGVuZCh7fSwgYW5pbWF0aW9uKSA6XG4gICAgICAgIHtkdXJhdGlvbjogYW5pbWF0aW9ufSxcbiAgICAgICAgb2xkQ29tcGxldGUgPSBvcHRzLmNvbXBsZXRlIHx8ICQubm9vcDtcblxuICAgICAgaWYgKGFuaW1hdGUgPT09IGZhbHNlKSB7XG4gICAgICAgIG9wdHMuZHVyYXRpb24gPSAwO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgJC5meC5zcGVlZHNbb3B0cy5kdXJhdGlvbl0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIG9wdHMuZHVyYXRpb24gPSAkLmZ4LnNwZWVkc1tvcHRzLmR1cmF0aW9uXTtcbiAgICAgIH1cblxuICAgICAgb3B0cy5jb21wbGV0ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBjb21wbGV0ZSgpO1xuICAgICAgICBvbGRDb21wbGV0ZS5jYWxsKHRoaXMpO1xuICAgICAgfTtcblxuICAgICAgdGhpcy5tb3ZlKHByb3BlcnRpZXMsIG9wdHMpO1xuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIF9wcmVwYXJlOiBmdW5jdGlvbihpdGVtKSB7XG4gICAgICB2YXIgaW5kZXggID0gdGhpcy5pbmRleChpdGVtKSxcbiAgICAgICAgaWR4ICAgID0gaW5kZXgsXG4gICAgICAgIHdoICAgICA9IHRoaXMuZGltZW5zaW9uKGl0ZW0pLFxuICAgICAgICBjbGlwICAgPSB0aGlzLmNsaXBwaW5nKCksXG4gICAgICAgIGxyYiAgICA9IHRoaXMudmVydGljYWwgPyAnYm90dG9tJyA6ICh0aGlzLnJ0bCA/ICdsZWZ0JyAgOiAncmlnaHQnKSxcbiAgICAgICAgY2VudGVyID0gdGhpcy5vcHRpb25zKCdjZW50ZXInKSxcbiAgICAgICAgdXBkYXRlID0ge1xuICAgICAgICAgIHRhcmdldDogICAgICAgaXRlbSxcbiAgICAgICAgICBmaXJzdDogICAgICAgIGl0ZW0sXG4gICAgICAgICAgbGFzdDogICAgICAgICBpdGVtLFxuICAgICAgICAgIHZpc2libGU6ICAgICAgaXRlbSxcbiAgICAgICAgICBmdWxseXZpc2libGU6IHdoIDw9IGNsaXAgPyBpdGVtIDogJCgpXG4gICAgICAgIH0sXG4gICAgICAgIGN1cnIsXG4gICAgICAgIGlzVmlzaWJsZSxcbiAgICAgICAgbWFyZ2luLFxuICAgICAgICBkaW07XG5cbiAgICAgIGlmIChjZW50ZXIpIHtcbiAgICAgICAgd2ggLz0gMjtcbiAgICAgICAgY2xpcCAvPSAyO1xuICAgICAgfVxuXG4gICAgICBpZiAod2ggPCBjbGlwKSB7XG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgY3VyciA9IHRoaXMuaXRlbXMoKS5lcSgrK2lkeCk7XG5cbiAgICAgICAgICBpZiAoY3Vyci5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5jaXJjdWxhcikge1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY3VyciA9IHRoaXMuaXRlbXMoKS5lcSgwKTtcblxuICAgICAgICAgICAgaWYgKGl0ZW0uZ2V0KDApID09PSBjdXJyLmdldCgwKSkge1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaXNWaXNpYmxlID0gdGhpcy5fdmlzaWJsZS5pbmRleChjdXJyKSA+PSAwO1xuXG4gICAgICAgICAgICBpZiAoaXNWaXNpYmxlKSB7XG4gICAgICAgICAgICAgIGN1cnIuYWZ0ZXIoY3Vyci5jbG9uZSh0cnVlKS5hdHRyKCdkYXRhLWpjYXJvdXNlbC1jbG9uZScsIHRydWUpKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5saXN0KCkuYXBwZW5kKGN1cnIpO1xuXG4gICAgICAgICAgICBpZiAoIWlzVmlzaWJsZSkge1xuICAgICAgICAgICAgICB2YXIgcHJvcHMgPSB7fTtcbiAgICAgICAgICAgICAgcHJvcHNbdGhpcy5sdF0gPSB0aGlzLmRpbWVuc2lvbihjdXJyKTtcbiAgICAgICAgICAgICAgdGhpcy5tb3ZlQnkocHJvcHMpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBGb3JjZSBpdGVtcyByZWxvYWRcbiAgICAgICAgICAgIHRoaXMuX2l0ZW1zID0gbnVsbDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBkaW0gPSB0aGlzLmRpbWVuc2lvbihjdXJyKTtcblxuICAgICAgICAgIGlmIChkaW0gPT09IDApIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHdoICs9IGRpbTtcblxuICAgICAgICAgIHVwZGF0ZS5sYXN0ICAgID0gY3VycjtcbiAgICAgICAgICB1cGRhdGUudmlzaWJsZSA9IHVwZGF0ZS52aXNpYmxlLmFkZChjdXJyKTtcblxuICAgICAgICAgIC8vIFJlbW92ZSByaWdodC9ib3R0b20gbWFyZ2luIGZyb20gdG90YWwgd2lkdGhcbiAgICAgICAgICBtYXJnaW4gPSB0b0Zsb2F0KGN1cnIuY3NzKCdtYXJnaW4tJyArIGxyYikpO1xuXG4gICAgICAgICAgaWYgKCh3aCAtIG1hcmdpbikgPD0gY2xpcCkge1xuICAgICAgICAgICAgdXBkYXRlLmZ1bGx5dmlzaWJsZSA9IHVwZGF0ZS5mdWxseXZpc2libGUuYWRkKGN1cnIpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh3aCA+PSBjbGlwKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLmNpcmN1bGFyICYmICFjZW50ZXIgJiYgd2ggPCBjbGlwKSB7XG4gICAgICAgIGlkeCA9IGluZGV4O1xuXG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgaWYgKC0taWR4IDwgMCkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY3VyciA9IHRoaXMuaXRlbXMoKS5lcShpZHgpO1xuXG4gICAgICAgICAgaWYgKGN1cnIubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBkaW0gPSB0aGlzLmRpbWVuc2lvbihjdXJyKTtcblxuICAgICAgICAgIGlmIChkaW0gPT09IDApIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHdoICs9IGRpbTtcblxuICAgICAgICAgIHVwZGF0ZS5maXJzdCAgID0gY3VycjtcbiAgICAgICAgICB1cGRhdGUudmlzaWJsZSA9IHVwZGF0ZS52aXNpYmxlLmFkZChjdXJyKTtcblxuICAgICAgICAgIC8vIFJlbW92ZSByaWdodC9ib3R0b20gbWFyZ2luIGZyb20gdG90YWwgd2lkdGhcbiAgICAgICAgICBtYXJnaW4gPSB0b0Zsb2F0KGN1cnIuY3NzKCdtYXJnaW4tJyArIGxyYikpO1xuXG4gICAgICAgICAgaWYgKCh3aCAtIG1hcmdpbikgPD0gY2xpcCkge1xuICAgICAgICAgICAgdXBkYXRlLmZ1bGx5dmlzaWJsZSA9IHVwZGF0ZS5mdWxseXZpc2libGUuYWRkKGN1cnIpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh3aCA+PSBjbGlwKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5fdXBkYXRlKHVwZGF0ZSk7XG5cbiAgICAgIHRoaXMudGFpbCA9IDA7XG5cbiAgICAgIGlmICghY2VudGVyICYmXG4gICAgICAgIHRoaXMub3B0aW9ucygnd3JhcCcpICE9PSAnY2lyY3VsYXInICYmXG4gICAgICAgIHRoaXMub3B0aW9ucygnd3JhcCcpICE9PSAnY3VzdG9tJyAmJlxuICAgICAgICB0aGlzLmluZGV4KHVwZGF0ZS5sYXN0KSA9PT0gKHRoaXMuaXRlbXMoKS5sZW5ndGggLSAxKSkge1xuXG4gICAgICAgIC8vIFJlbW92ZSByaWdodC9ib3R0b20gbWFyZ2luIGZyb20gdG90YWwgd2lkdGhcbiAgICAgICAgd2ggLT0gdG9GbG9hdCh1cGRhdGUubGFzdC5jc3MoJ21hcmdpbi0nICsgbHJiKSk7XG5cbiAgICAgICAgaWYgKHdoID4gY2xpcCkge1xuICAgICAgICAgIHRoaXMudGFpbCA9IHdoIC0gY2xpcDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIF9wb3NpdGlvbjogZnVuY3Rpb24oaXRlbSkge1xuICAgICAgdmFyIGZpcnN0ICA9IHRoaXMuX2ZpcnN0LFxuICAgICAgICBwb3MgICAgPSB0b0Zsb2F0KGZpcnN0LnBvc2l0aW9uKClbdGhpcy5sdF0pLFxuICAgICAgICBjZW50ZXIgPSB0aGlzLm9wdGlvbnMoJ2NlbnRlcicpLFxuICAgICAgICBjZW50ZXJPZmZzZXQgPSBjZW50ZXIgPyAodGhpcy5jbGlwcGluZygpIC8gMikgLSAodGhpcy5kaW1lbnNpb24oZmlyc3QpIC8gMikgOiAwO1xuXG4gICAgICBpZiAodGhpcy5ydGwgJiYgIXRoaXMudmVydGljYWwpIHtcbiAgICAgICAgaWYgKHRoaXMucmVsYXRpdmUpIHtcbiAgICAgICAgICBwb3MgLT0gdG9GbG9hdCh0aGlzLmxpc3QoKS53aWR0aCgpKSAtIHRoaXMuZGltZW5zaW9uKGZpcnN0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwb3MgLT0gdGhpcy5jbGlwcGluZygpIC0gdGhpcy5kaW1lbnNpb24oZmlyc3QpO1xuICAgICAgICB9XG5cbiAgICAgICAgcG9zICs9IGNlbnRlck9mZnNldDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBvcyAtPSBjZW50ZXJPZmZzZXQ7XG4gICAgICB9XG5cbiAgICAgIGlmICghY2VudGVyICYmXG4gICAgICAgICh0aGlzLmluZGV4KGl0ZW0pID4gdGhpcy5pbmRleChmaXJzdCkgfHwgdGhpcy5pblRhaWwpICYmXG4gICAgICAgIHRoaXMudGFpbCkge1xuICAgICAgICBwb3MgPSB0aGlzLnJ0bCAmJiAhdGhpcy52ZXJ0aWNhbCA/IHBvcyAtIHRoaXMudGFpbCA6IHBvcyArIHRoaXMudGFpbDtcbiAgICAgICAgdGhpcy5pblRhaWwgPSB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5pblRhaWwgPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIC1wb3M7XG4gICAgfSxcbiAgICBfdXBkYXRlOiBmdW5jdGlvbih1cGRhdGUpIHtcbiAgICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgICAgY3VycmVudCA9IHtcbiAgICAgICAgICB0YXJnZXQ6ICAgICAgIHRoaXMuX3RhcmdldCxcbiAgICAgICAgICBmaXJzdDogICAgICAgIHRoaXMuX2ZpcnN0LFxuICAgICAgICAgIGxhc3Q6ICAgICAgICAgdGhpcy5fbGFzdCxcbiAgICAgICAgICB2aXNpYmxlOiAgICAgIHRoaXMuX3Zpc2libGUsXG4gICAgICAgICAgZnVsbHl2aXNpYmxlOiB0aGlzLl9mdWxseXZpc2libGVcbiAgICAgICAgfSxcbiAgICAgICAgYmFjayA9IHRoaXMuaW5kZXgodXBkYXRlLmZpcnN0IHx8IGN1cnJlbnQuZmlyc3QpIDwgdGhpcy5pbmRleChjdXJyZW50LmZpcnN0KSxcbiAgICAgICAga2V5LFxuICAgICAgICBkb1VwZGF0ZSA9IGZ1bmN0aW9uKGtleSkge1xuICAgICAgICAgIHZhciBlbEluICA9IFtdLFxuICAgICAgICAgICAgZWxPdXQgPSBbXTtcblxuICAgICAgICAgIHVwZGF0ZVtrZXldLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFtrZXldLmluZGV4KHRoaXMpIDwgMCkge1xuICAgICAgICAgICAgICBlbEluLnB1c2godGhpcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBjdXJyZW50W2tleV0uZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICh1cGRhdGVba2V5XS5pbmRleCh0aGlzKSA8IDApIHtcbiAgICAgICAgICAgICAgZWxPdXQucHVzaCh0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIGlmIChiYWNrKSB7XG4gICAgICAgICAgICBlbEluID0gZWxJbi5yZXZlcnNlKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVsT3V0ID0gZWxPdXQucmV2ZXJzZSgpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHNlbGYuX3RyaWdnZXIoa2V5ICsgJ2luJywgJChlbEluKSk7XG4gICAgICAgICAgc2VsZi5fdHJpZ2dlcihrZXkgKyAnb3V0JywgJChlbE91dCkpO1xuXG4gICAgICAgICAgc2VsZlsnXycgKyBrZXldID0gdXBkYXRlW2tleV07XG4gICAgICAgIH07XG5cbiAgICAgIGZvciAoa2V5IGluIHVwZGF0ZSkge1xuICAgICAgICBkb1VwZGF0ZShrZXkpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH0pO1xufShqUXVlcnksIHdpbmRvdykpO1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLypjbGFzcyBTbGlkZXIge1xuICBjb25zdHJ1Y3RvciAoKSB7XG5cbiAgfVxuXG4gIGluaXQoKSB7XG4gICAgY29uc29sZS5sb2coJ9Cf0YDQuNCy0LXRgicpO1xuICB9XG59Ki9cblxuKGZ1bmN0aW9uICgkKSB7XG4gICQoZnVuY3Rpb24gKCkge1xuICAgIC8vIGxldCBzbGlkZXIgPSBuZXcgU2xpZGVyKCk7XG4gICAgLy8gc2xpZGVyLmluaXQoKTtcbiAgICAkKCcuamNhcm91c2VsJykuamNhcm91c2VsKHtcbiAgICAgIHdyYXA6ICdjaXJjdWxhcidcbiAgICB9KTtcbiAgICAkKCcuamNhcm91c2VsLXByZXYnKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICAgICQoJy5qY2Fyb3VzZWwnKS5qY2Fyb3VzZWwoJ3Njcm9sbCcsICctPTEnKTtcbiAgICB9KTtcblxuICAgICQoJy5qY2Fyb3VzZWwtbmV4dCcpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgJCgnLmpjYXJvdXNlbCcpLmpjYXJvdXNlbCgnc2Nyb2xsJywgJys9MScpO1xuICAgIH0pO1xuICB9KVxufSkoalF1ZXJ5KTsiXX0=
